<?xml version="1.0"?>
<project name="StringTemplate.NET i18n Example" default="build">
    <tstamp/>
	<property name="base.dir" value="${path::get-full-path( project::get-base-directory() )}" />
	<property name="bin.dir" value="${base.dir}/bin" />

	<property name="name" value="i18n" />
	<property name="assembly.name" value="${name}.exe" />
	<property name="resource.assembly.name" value="${name}.resources.dll" />
	<property name="src.dir" value="${base.dir}/" />

	<property name="debug"		value="false"	unless="${property::exists('debug')}" />
	<property name="optimize"	value="true"	unless="${property::exists('optimize')}" />

    <target name="release" depends="clean" description="build non-debug version">
        <!-- build a clean release distribution for release -->
        <property name="debug" value="false"/>
        <echo message="Debug = ${debug}"/>
        <call target="build"/>
    </target>
    
    <target name="build" depends="init, compile" description="compiles the source code">
    </target>

	<target name="init" depends="clean">
		<copy todir="${bin.dir}">
<!--		
			<fileset basedir="${base.dir}/../../build/${framework::get-target-framework()}">
-->			
			<fileset basedir="${base.dir}/../../bin">
				<include name="StringTemplate.dll" />
				<include name="antlr.runtime.dll" />
			</fileset>
		</copy>
	</target>

    <target name="clean" description="cleans up compiled output">
    </target>

	<target name="compile" depends="init">
		<csc 
			target="exe" 
			debug="${debug}"
			optimize="${optimize}"
			output="${bin.dir}/${assembly.name}">
			
			<nowarn>
				<warning number="1591" />
				<warning number="1572" />
			</nowarn>
			
			<resources prefix="ST.Examples.i18n" dynamicprefix="true">
				<include name="Content.Strings.resx" />
			</resources>
			
			<sources basedir="${src.dir}" defaultexcludes="true">
				<include name="Test.cs" />
			</sources>

			<references>
				<include name="${base.dir}/../../bin/StringTemplate.dll" />
				<include name="${base.dir}/../../bin/antlr.runtime.dll" />
			</references>
		</csc>
		
		<resgen todir="${bin.dir}/fr">
		    <resources>
        		<include name="Content.Strings.fr.resx" />
		    </resources>
		</resgen>
		<al 
			output="${bin.dir}/fr/${resource.assembly.name}" 
			target="lib" 
			culture="fr">
			
            <sources>
                <include name="${bin.dir}/fr/Content.Strings.fr.resources" />
            </sources>
        </al>

	</target>

	<target name="docs">
	</target>
			
	<target name="dist" depends="docs">
	</target>

</project>
